input {
  file {
    path => "/var/log/elksession"
    type => "session"
  }
  file {
    path => "/var/log/events.log"
    type => "events"
  }
}
# Updated Regex
# %{SYSLOGTIMESTAMP:time},l7,%{INT:customerid},%{INT:lmid},%{IP:client.ip},%{INT:client.port},%{IP:vs.ip},%{INT:vs.port},%{INT:session.dstrtt1},%{INT:session.dstrtt2},%{INT:session.rttmin},%{QUOTEDSTRING:client.ua},%{WORD:persist},%{URIPATHPARAM:request.path},%{WORD:request.method},%{IP:rs.ip},%{INT:rs.port},%{INT:session.requesttime},%{INT:session.responsetime},%{IP:header.xfwdhead},%{INT:header.xfwdforport},%{INT:responsecode}

filter {
    if [type] == "session" {
            grok {
                match => { "message" => ['%{SYSLOGTIMESTAMP:time},session,%{INT:customerid},%{INT:lmid},%{IP:client.ip},%{HOSTPORT:request.vs},%{HOSTNAME:request.hostname},%{URIPATHPARAM:request.path},%{QUOTEDSTRING:client.ua}']}
            }
            grok {
                match => { "message" => ['%{SYSLOGTIMESTAMP:time},l7,%{INT:customerid},%{INT:lmid},%{INT:ssl},%{IP:client.ip},%{INT:client.port},%{IP:vs.ip},%{INT:vs.port},%{INT:session.dstrtt1},%{INT:session.dstrtt2},%{INT:session.rttmin},%{QUOTEDSTRING:client.ua},%{WORD:persist},%{URIPATHPARAM:request.path},%{WORD:request.method},%{IP:rs.ip},%{INT:rs.port},%{INT:session.requesttime},%{INT:session.responsetime},%{IP:header.xfwdhead},%{INT:header.xfwdforport},%{INT:responsecode},%{DATA:cipher},%{HOSTNAME:snihostname},%{GREEDYDATA:tlsversion}']}
                add_field => {
                    "subtypetype" => "l7"
                }
            }
    }
    if [type] == "events" {
            grok {
                match => { "message" => ['%{DATA:timestamp},%{QUOTEDSTRING:description},%{INT:custid},%{INT:lmid},%{INT:vsid},%{WORD:kmod},%{WORD:state}']}
            }
    }
}



filter {
    if [type] =~ "session" {
        useragent {
                source => "client.ua"
                target => "ua"
        }
    }
}


filter {
    if [type] =~ "session" {
        geoip {
                source => "client.ip"
                target => "geoip"
                add_tag => ["geoipadd"]
        }
    }
}

output {
  elasticsearch {
	hosts => ["localhost:9200"]
	index => ["logstash-1"]
  }

  stdout { codec => rubydebug }
}